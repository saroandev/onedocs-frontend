name: Deploy image to Amazon ECR

on:
    push:
        branches: [master] # It can be changed to the branch you want to deploy

permissions:
    id-token: write
    contents: read

env:
    AWS_ACCOUNT_ID: 908555131527
    AWS_REGION: eu-central-1
    AWS_ROLE_ARN: "arn:aws:iam::908555131527:role/GithubActionIAMRole"
    APPLICATION_NAME: frontend # auth, global, knowledgebase, toolkit, frontend
    # EKS_CLUSTER_NAME: onedocsv2-eks
    EKS_NAMESPACE: preprod
    IMAGE_TAG: latest

jobs:
    deploy:
        runs-on: ubuntu-latest
        permissions:
            id-token: write
            contents: read

        steps:
            - name: Checkout code
              uses: actions/checkout@v4.2.2
            - name: Configure AWS credentials using IAM Role
              uses: aws-actions/configure-aws-credentials@v4
              with:
                  aws-region: ${{ env.AWS_REGION }}
                  role-to-assume: ${{ env.AWS_ROLE_ARN }}
                  role-session-name: GitHub_to_AWS_via_FederatedOIDC # or 'GitHubActions' if first one is not working

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3.8.0

            - name: Log in to Amazon ECR
              id: login-ecr
              uses: aws-actions/amazon-ecr-login@v2.0.1

            - name: Build, tag, and push image to Amazon ECR
              env:
                  ECR_REPOSITORY: onedocsv2/preprod/${{ env.APPLICATION_NAME }}
              run: |
                  docker buildx build --platform linux/amd64 \
                    -t ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }} \
                    --push .

                  echo "::set-output name=image::${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}"

        # - name: Update EKS deployment for new docker image
        #   run: |
        #     aws eks update-kubeconfig --name ${{ env.EKS_CLUSTER_NAME }} --region ${{ env.AWS_REGION }}

        #     kubectl rollout status deployment ${{ env.EKS_APPLICATION_NAME }}-dep -n ${{ env.EKS_NAMESPACE }}

        #     kubectl rollout restart deployment ${{ env.EKS_APPLICATION_NAME }}-dep -n ${{ env.EKS_NAMESPACE }}
